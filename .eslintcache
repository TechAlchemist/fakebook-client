[{"H:\\fakebook-client\\fakebook-client\\src\\index.js":"1","H:\\fakebook-client\\fakebook-client\\src\\App.js":"2","H:\\fakebook-client\\fakebook-client\\src\\ApolloProvider.js":"3","H:\\fakebook-client\\fakebook-client\\src\\Pages\\Login.js":"4","H:\\fakebook-client\\fakebook-client\\src\\Pages\\Home.js":"5","H:\\fakebook-client\\fakebook-client\\src\\Pages\\Register.js":"6","H:\\fakebook-client\\fakebook-client\\src\\Components\\Menu.js":"7","H:\\fakebook-client\\fakebook-client\\src\\Components\\PostCard.js":"8","H:\\fakebook-client\\fakebook-client\\src\\context\\auth.js":"9","H:\\fakebook-client\\fakebook-client\\src\\util\\hooks.js":"10","H:\\fakebook-client\\fakebook-client\\src\\util\\AuthRoute.js":"11","H:\\fakebook-client\\fakebook-client\\src\\util\\graphql.js":"12","H:\\fakebook-client\\fakebook-client\\src\\Components\\PostForm.js":"13","H:\\fakebook-client\\fakebook-client\\src\\Components\\LikeButton.js":"14","H:\\fakebook-client\\fakebook-client\\src\\util\\MyPopup.js":"15","H:\\fakebook-client\\fakebook-client\\src\\Pages\\SinglePost.js":"16","H:\\fakebook-client\\fakebook-client\\src\\Components\\DeleteButton.js":"17"},{"size":151,"mtime":1610747037570,"results":"18","hashOfConfig":"19"},{"size":1089,"mtime":1611099793943,"results":"20","hashOfConfig":"19"},{"size":720,"mtime":1611102750793,"results":"21","hashOfConfig":"19"},{"size":2688,"mtime":1611100928453,"results":"22","hashOfConfig":"19"},{"size":1162,"mtime":1611099826072,"results":"23","hashOfConfig":"19"},{"size":3070,"mtime":1611101139005,"results":"24","hashOfConfig":"19"},{"size":1936,"mtime":1611101274313,"results":"25","hashOfConfig":"19"},{"size":1556,"mtime":1611101489085,"results":"26","hashOfConfig":"19"},{"size":1337,"mtime":1611006376978,"results":"27","hashOfConfig":"19"},{"size":415,"mtime":1611006300627,"results":"28","hashOfConfig":"19"},{"size":436,"mtime":1611008161634,"results":"29","hashOfConfig":"19"},{"size":354,"mtime":1611095422431,"results":"30","hashOfConfig":"19"},{"size":2067,"mtime":1611100003999,"results":"31","hashOfConfig":"19"},{"size":1572,"mtime":1611100827551,"results":"32","hashOfConfig":"19"},{"size":212,"mtime":1611016095790,"results":"33","hashOfConfig":"19"},{"size":5259,"mtime":1611101562936,"results":"34","hashOfConfig":"19"},{"size":1886,"mtime":1611030217097,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"120zjr1",{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"38"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"H:\\fakebook-client\\fakebook-client\\src\\index.js",[],["75","76"],"H:\\fakebook-client\\fakebook-client\\src\\App.js",["77","78"],"import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container, Header, Icon } from 'semantic-ui-react';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\n\nimport { AuthProvider } from './context/auth';\nimport AuthRoute from './util/AuthRoute';\n\nimport MenuBar from './Components/Menu';\nimport Home from './Pages/Home';\nimport Login from './Pages/Login';\nimport Register from './Pages/Register';\nimport SinglePost from './Pages/SinglePost';\n\nimport logo from './fakebook-logo.gif';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Container>\n          <MenuBar />\n          <div className=\"logo\">\n            <img src={logo} alt=\"fakebook logo\" />\n          </div>\n          <Route exact path=\"/\" component={Home} />\n          <AuthRoute exact path=\"/login\" component={Login} />\n          <AuthRoute exact path=\"/register\" component={Register} />\n          <Route exact path=\"/posts/:postId\" component={SinglePost} />\n        </Container>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;","H:\\fakebook-client\\fakebook-client\\src\\ApolloProvider.js",[],"H:\\fakebook-client\\fakebook-client\\src\\Pages\\Login.js",[],"H:\\fakebook-client\\fakebook-client\\src\\Pages\\Home.js",["79"],"import React, { useContext } from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport { Grid, Transition } from 'semantic-ui-react';\r\n\r\nimport { AuthContext } from '../context/auth';\r\nimport PostCard from '../Components/PostCard';\r\nimport PostForm from '../Components/PostForm';\r\nimport { FETCH_POSTS_QUERY } from '../util/graphql';\r\n\r\nfunction Home() {\r\n  const { user } = useContext(AuthContext);\r\n  const {\r\n    loading,\r\n    error,\r\n    data\r\n  } = useQuery(FETCH_POSTS_QUERY);\r\n\r\n  return (\r\n    <Grid columns={1}>\r\n      <Grid.Row className=\"page-title\">\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        {user && (\r\n          <Grid.Column>\r\n            <PostForm />\r\n          </Grid.Column>\r\n        )}\r\n        {loading ? (\r\n          <h1>Loading posts..</h1>\r\n        ) : (\r\n          <Transition.Group>\r\n            {data &&\r\n              data.getPosts.map((post) => (\r\n                <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\r\n                  <PostCard post={post} />\r\n                </Grid.Column>\r\n              ))}\r\n          </Transition.Group>\r\n        )}\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Home;","H:\\fakebook-client\\fakebook-client\\src\\Pages\\Register.js",[],"H:\\fakebook-client\\fakebook-client\\src\\Components\\Menu.js",[],"H:\\fakebook-client\\fakebook-client\\src\\Components\\PostCard.js",[],"H:\\fakebook-client\\fakebook-client\\src\\context\\auth.js",[],"H:\\fakebook-client\\fakebook-client\\src\\util\\hooks.js",[],"H:\\fakebook-client\\fakebook-client\\src\\util\\AuthRoute.js",[],"H:\\fakebook-client\\fakebook-client\\src\\util\\graphql.js",[],"H:\\fakebook-client\\fakebook-client\\src\\Components\\PostForm.js",[],"H:\\fakebook-client\\fakebook-client\\src\\Components\\LikeButton.js",[],"H:\\fakebook-client\\fakebook-client\\src\\util\\MyPopup.js",[],["80","81"],"H:\\fakebook-client\\fakebook-client\\src\\Pages\\SinglePost.js",["82","83","84"],"import React, { useContext, useState, useRef } from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport moment from 'moment';\r\nimport {\r\n  Button,\r\n  Card,\r\n  Form,\r\n  Grid,\r\n  Image,\r\n  Icon,\r\n  Label\r\n} from 'semantic-ui-react';\r\n\r\nimport { AuthContext } from '../context/auth';\r\nimport LikeButton from '../Components/LikeButton';\r\nimport DeleteButton from '../Components/DeleteButton';\r\nimport MyPopup from '../util/MyPopup';\r\n\r\nfunction SinglePost(props) {\r\n  const postId = props.match.params.postId;\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const FETCH_POST_QUERY = gql`\r\n  query($postId: ID!) {\r\n    getPost(postId: $postId) {\r\n      id\r\n      body\r\n      createdAt\r\n      username\r\n      likeCount\r\n      profilePicture\r\n      likes {\r\n        username\r\n      }\r\n      commentCount\r\n      comments {\r\n        id\r\n        username\r\n        createdAt\r\n        body\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst SUBMIT_COMMENT_MUTATION = gql`\r\n  mutation($postId: String!, $body: String!) {\r\n    createComment(postId: $postId, body: $body) {\r\n      id\r\n      comments {\r\n        id\r\n        body\r\n        createdAt\r\n        username\r\n      }\r\n      commentCount\r\n    }\r\n  }\r\n`;\r\n\r\n  const commentInputRef = useRef(null);\r\n\r\n  const [comment, setComment] = useState('');\r\n\r\n  const [submitComment] = useMutation(SUBMIT_COMMENT_MUTATION, {\r\n    update() {\r\n      setComment('');\r\n      commentInputRef.current.blur();\r\n    },\r\n    variables: {\r\n      postId,\r\n      body: comment\r\n    }\r\n  });\r\n\r\n  function deletePostCallback() {\r\n    props.history.push('/');\r\n  }\r\n\r\n  const {loading, error, data } = useQuery(FETCH_POST_QUERY, {\r\n    variables: {\r\n      postId\r\n    }\r\n  });\r\n\r\n  let postMarkup;\r\n  if (!data) {\r\n    postMarkup = <p>Loading post..</p>;\r\n  } else {\r\n    const {\r\n      id,\r\n      body,\r\n      createdAt,\r\n      username,\r\n      comments,\r\n      profilePicture,\r\n      likes,\r\n      likeCount,\r\n      commentCount\r\n    } = data.getPost;\r\n\r\n   postMarkup = (\r\n    <Grid>\r\n    <Grid.Row>\r\n      <Grid.Column width={2}>\r\n        <Image\r\n          src={profilePicture}\r\n          size=\"small\"\r\n          float=\"right\"\r\n        />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Card fluid>\r\n          <Card.Content>\r\n            <Card.Header>{username}</Card.Header>\r\n            <Card.Meta>{moment(createdAt).fromNow()}</Card.Meta>\r\n            <Card.Description>{body}</Card.Description>\r\n          </Card.Content>\r\n          <hr />\r\n          <Card.Content extra>\r\n\r\n            {/* Avoiding destructing to allow call from home and singlePost */}\r\n            <LikeButton user={user} id={id} likes={likes} likeCount={likeCount} />\r\n\r\n\r\n            <MyPopup content=\"Comment on post\">\r\n              <Button\r\n                as=\"div\"\r\n                labelPosition=\"right\"\r\n                onClick={() => console.log('Comment on post')}\r\n              >\r\n                <Button basic color=\"blue\">\r\n                  <Icon name=\"comments\" />\r\n                </Button>\r\n                <Label basic color=\"blue\" pointing=\"left\">\r\n                  {commentCount}\r\n                </Label>\r\n              </Button>\r\n            </MyPopup>\r\n\r\n            {/* Delete Button, only active on owned posts. */}\r\n            {user && user.username === username && (\r\n              <DeleteButton postId={id} callback={deletePostCallback} />\r\n            )}\r\n          </Card.Content>\r\n        </Card>\r\n\r\n        {user && (\r\n              <Card fluid>\r\n                <Card.Content>\r\n                  <p>Post a comment</p>\r\n                  <Form>\r\n                    <div className=\"ui action input fluid\">\r\n                      <input\r\n                        type=\"text\"\r\n                        placeholder=\"Comment..\"\r\n                        name=\"comment\"\r\n                        value={comment}\r\n                        onChange={(event) => setComment(event.target.value)}\r\n                        ref={commentInputRef}\r\n                      />\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"ui button green\"\r\n                        disabled={comment.trim() === ''}\r\n                        onClick={submitComment}\r\n                      >\r\n                        Submit\r\n                      </button>\r\n                    </div>\r\n                  </Form>\r\n                </Card.Content>\r\n              </Card>\r\n            )}\r\n\r\n        {/* Create all of the comment elements from comment array */}\r\n        {data.getPost.comments.map((comment) => (\r\n          <Card fluid key={comment.id}>\r\n            <Card.Content>\r\n              {user && user.username === comment.username && (\r\n                <DeleteButton postId={id} commentId={comment.id} />\r\n              )}\r\n              <Card.Header>{comment.username}</Card.Header>\r\n              <Card.Meta>{moment(comment.createdAt).fromNow()}</Card.Meta>\r\n              <Card.Description>{comment.body}</Card.Description>\r\n            </Card.Content>\r\n          </Card>\r\n        ))}\r\n\r\n      </Grid.Column>\r\n    </Grid.Row>\r\n  </Grid>\r\n   )\r\n\r\n   return postMarkup;\r\n  }\r\n  return (\r\n      <h1> Loading... </h1>\r\n  )\r\n\r\n}\r\nexport default SinglePost;","H:\\fakebook-client\\fakebook-client\\src\\Components\\DeleteButton.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":3,"column":21,"nodeType":"91","messageId":"92","endLine":3,"endColumn":27},{"ruleId":"89","severity":1,"message":"93","line":3,"column":29,"nodeType":"91","messageId":"92","endLine":3,"endColumn":33},{"ruleId":"89","severity":1,"message":"94","line":14,"column":5,"nodeType":"91","messageId":"92","endLine":14,"endColumn":10},{"ruleId":"85","replacedBy":"95"},{"ruleId":"87","replacedBy":"96"},{"ruleId":"89","severity":1,"message":"97","line":81,"column":10,"nodeType":"91","messageId":"92","endLine":81,"endColumn":17},{"ruleId":"89","severity":1,"message":"94","line":81,"column":19,"nodeType":"91","messageId":"92","endLine":81,"endColumn":24},{"ruleId":"89","severity":1,"message":"98","line":96,"column":7,"nodeType":"91","messageId":"92","endLine":96,"endColumn":15},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used.","'error' is assigned a value but never used.",["99"],["100"],"'loading' is assigned a value but never used.","'comments' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]