[{"H:\\fakebook-client\\fakebook-client\\src\\index.js":"1","H:\\fakebook-client\\fakebook-client\\src\\App.js":"2","H:\\fakebook-client\\fakebook-client\\src\\ApolloProvider.js":"3","H:\\fakebook-client\\fakebook-client\\src\\Pages\\Login.js":"4","H:\\fakebook-client\\fakebook-client\\src\\Pages\\Home.js":"5","H:\\fakebook-client\\fakebook-client\\src\\Pages\\Register.js":"6","H:\\fakebook-client\\fakebook-client\\src\\Components\\Menu.js":"7","H:\\fakebook-client\\fakebook-client\\src\\Components\\PostCard.js":"8","H:\\fakebook-client\\fakebook-client\\src\\context\\auth.js":"9","H:\\fakebook-client\\fakebook-client\\src\\util\\hooks.js":"10"},{"size":151,"mtime":1610747037570,"results":"11","hashOfConfig":"12"},{"size":666,"mtime":1610988310744,"results":"13","hashOfConfig":"12"},{"size":525,"mtime":1610748800665,"results":"14","hashOfConfig":"12"},{"size":162,"mtime":1610753400688,"results":"15","hashOfConfig":"12"},{"size":1247,"mtime":1611004553824,"results":"16","hashOfConfig":"12"},{"size":3040,"mtime":1611006319309,"results":"17","hashOfConfig":"12"},{"size":1336,"mtime":1610989325765,"results":"18","hashOfConfig":"12"},{"size":1677,"mtime":1610995778872,"results":"19","hashOfConfig":"12"},{"size":1337,"mtime":1611006376978,"results":"20","hashOfConfig":"12"},{"size":415,"mtime":1611006300627,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"120zjr1",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"H:\\fakebook-client\\fakebook-client\\src\\index.js",[],["44","45"],"H:\\fakebook-client\\fakebook-client\\src\\App.js",[],"H:\\fakebook-client\\fakebook-client\\src\\ApolloProvider.js",[],"H:\\fakebook-client\\fakebook-client\\src\\Pages\\Login.js",[],"H:\\fakebook-client\\fakebook-client\\src\\Pages\\Home.js",["46"],"import React from 'react';\r\nimport { useQuery } from '@apollo/client';\r\nimport gql from 'graphql-tag';\r\nimport { Grid } from 'semantic-ui-react';\r\n\r\nimport PostCard from '../Components/PostCard';\r\n\r\nimport '../App.css';\r\n\r\nfunction Home() {\r\n\r\n    const FETCH_POSTS_QUERY = gql`\r\n    {\r\n        getPosts {\r\n            id body createdAt username\r\n            likes {\r\n                username\r\n            }\r\n            likeCount\r\n            comments {\r\n                id\r\n                username\r\n                createdAt\r\n                body\r\n            }\r\n            commentCount\r\n        }\r\n    }\r\n`;\r\n\r\n    const { loading, error, data } = useQuery(FETCH_POSTS_QUERY);\r\n\r\n    console.log(data)\r\n    return (\r\n        <Grid columns={1} >\r\n            <Grid.Row className=\"page-title\">\r\n                <h1> Recent Posts</h1>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                {loading ? (<h1>loading posts..</h1>) : ( data && data.getPosts.map(post => (\r\n                    <Grid.Column key={post.id} style={{ marginBottom: 20 }}>\r\n                        <PostCard post={post} />\r\n                    </Grid.Column>\r\n                )) )}\r\n            </Grid.Row>\r\n        </Grid>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Home;","H:\\fakebook-client\\fakebook-client\\src\\Pages\\Register.js",[],"H:\\fakebook-client\\fakebook-client\\src\\Components\\Menu.js",[],"H:\\fakebook-client\\fakebook-client\\src\\Components\\PostCard.js",[],"H:\\fakebook-client\\fakebook-client\\src\\context\\auth.js",[],"H:\\fakebook-client\\fakebook-client\\src\\util\\hooks.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":31,"column":22,"nodeType":"53","messageId":"54","endLine":31,"endColumn":27},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]